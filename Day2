1)Valid Palindrome

class Solution:
    def isPalindrome(self, s: str) -> bool:
        res=""
        for m in s:
            if m.isalnum():
                res+=m.lower()
        if res[::-1]==res:
            return(True)
        else:
            return(False)
                

2)product of array except self

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n=len(nums)
        p1=1
        p2=1
        res=[0]*n
        for i in range(n):
            res[i]=p1
            p1=p1*nums[i]
        for i in range(n-1,-1,-1):
            res[i]=res[i]*p2
            p2*=nums[i]
        return res


3)Best Time to Buy and Sell Stock

  
from typing import List

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        min_price = float('inf')
        max_profit = 0

        for price in prices:
            if price < min_price:
                min_price = price
            else:
                max_profit = max(max_profit, price - min_price)

        return max_profit


                
