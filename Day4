1)Subarray sum equals K

class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        count=0
        sums={}
        currsum=0
        for i in nums:
            currsum+=i
            if currsum==k:
                count+=1
            if currsum-k in sums:
                count+=sums[currsum-k]
            sums[currsum]=sums.get(currsum,0)+1
        return count


2)longest-palindromic-substring

class Solution:
    def longestPalindrome(self, s: str) -> str:
        n=len(s)
        longest=""
        for i in range(n):
            for j in range(i,n):
                substring=s[i:j+1]
                if substring==substring[::-1]:
                    if len(substring) > len(longest):
                        longest=substring
        return(longest)

3)valid-parentheses

class Solution:
    def isValid(self, s: str) -> bool:
        dici={"}":"{","]":"[",")":"("}
        stack=[]
        for char in s:
            if char in dici:
                top_ele=stack.pop() if stack else '#'
                if dici[char]!=top_ele:
                    return False
            else:
                stack.append(char)
        return not stack
        
